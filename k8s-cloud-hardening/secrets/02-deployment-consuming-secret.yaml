# This deployment demonstrates how to consume a Kubernetes Secret.
# The `app-api-key` Secret is mounted as environment variables into the container.
# This makes the secret values available to the application running inside the pod.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-consumer-app
  labels:
    app: secret-consumer
  namespace: secure-app-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secret-consumer
  template:
    metadata:
      labels:
        app: secret-consumer
    spec:
      containers:
      - name: consumer
        image: busybox:1.36 # A simple image to demonstrate reading environment variables
        command: ["/bin/sh", "-c"]
        args:
          - echo "API Key: $API_KEY";
          - echo "DB Password: $DB_PASSWORD";
          - sleep infinity; # Keep the container running
        env:
          - name: API_KEY # Environment variable name
            valueFrom:
              secretKeyRef:
                name: app-api-key # Name of the Secret
                key: API_KEY # Key within the Secret to extract
          - name: DB_PASSWORD # Another environment variable
            valueFrom:
              secretKeyRef:
                name: app-api-key
                key: DB_PASSWORD
        # Alternatively, secrets can be mounted as files:
        # volumeMounts:
        #   - name: api-secret-volume
        #     mountPath: "/etc/secrets"
        #     readOnly: true
      # volumes:
      #   - name: api-secret-volume
      #     secret:
      #       secretName: app-api-key