package com.example.genai.codereviewer;

import com.fasterxml.jackson.annotation.JsonProperty;

// Data class to represent a single review comment generated by the LLM.
// This structure maps directly to the expected JSON output format from the LLM.
public class ReviewComment {
    // Path to the file where the comment applies (e.g., src/main/java/MyClass.java).
    @JsonProperty("path")
    private String path;

    // The starting line number for the comment in the new (after changes) file.
    // This is 1-indexed. If 0, it indicates a file-level comment.
    @JsonProperty("start_line")
    private int startLine;

    // The ending line number for the comment in the new file (optional).
    // If provided, the comment applies to a range of lines.
    @JsonProperty("end_line")
    private int endLine;

    // The actual body/text of the review comment.
    @JsonProperty("body")
    private String body;

    // Default constructor (required for Jackson deserialization).
    public ReviewComment() {}

    // Constructor with all fields for easy object creation.
    public ReviewComment(String path, int startLine, int endLine, String body) {
        this.path = path;
        this.startLine = startLine;
        this.endLine = endLine;
        this.body = body;
    }

    // --- Getters ---
    public String getPath() {
        return path;
    }

    public int getStartLine() {
        return startLine;
    }

    public int getEndLine() {
        return endLine;
    }

    public String getBody() {
        return body;
    }

    // --- Setters ---
    public void setPath(String path) {
        this.path = path;
    }

    public void setStartLine(int startLine) {
        this.startLine = startLine;
    }

    public void setEndLine(int endLine) {
        this.endLine = endLine;
    }

    public void setBody(String body) {
        this.body = body;
    }

    @Override
    public String toString() {
        return "ReviewComment{" +
               "path='" + path + '\'' +
               ", startLine=" + startLine +
               ", endLine=" + endLine +
               ", body='" + body + '\'' +
               '}';
    }
}